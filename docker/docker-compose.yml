services:
  db:
    container_name: "postgres"
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    environment:
      - POSTGRES_PASSWORD=cadueUHulyGUxP
      - POSTGRES_USER=postgres
      - POSTGRES_DB=my_django_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d my_django_db" ]
      interval: 5s
      timeout: 5s
      retries: 5


  django:
    container_name: "django"
    build:
      context: ../backend
    command: daphne -b 0.0.0.0 -p 8000 info.asgi:application  # ASGI with daphne 
    volumes:
      - ../backend/:/code
      - static_volume:/code/static
      - media_volume:/code/media
    depends_on:
      - db
    networks:
      # - nginx_network
      - backend_network
    env_file: "../.env"
    restart: always

  nginx:
    image: nginx:1.27-alpine-slim
    container_name: "nginx"
    init: true
    command: [ nginx, '-g', 'daemon off;' ]
    ports:
      - "127.0.0.1:8001:80"
    volumes:
      - /etc/nginx/certs:/etc/nginx/certs:ro
      - ./config/nginx/conf.d/mysites/mysite.conf:/etc/nginx/nginx.conf
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
      - vue-static:/usr/share/nginx/html
    depends_on:
      - django
      - db 
      - frontend
    networks:
      - nginx_network
    restart: always

  frontend: 
    build: 
     context: ../frontend
    container_name: frontend
    restart: always
    volumes:
      - vue-static:/usr/share/nginx/html
    depends_on:
      - django

networks:
  backend_network:
    driver: bridge
  nginx_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  vue-static:
